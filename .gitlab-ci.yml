image: gradle:latest
before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

stages:
  - test
  - build
  - deploy

variables:
  SERVER_SSH_PRIVATE_KEY: "$SERVER_SSH_PRIVATE_KEY"

# Make Project
build:
  interruptible: true
  stage: build
  script:
    - ./gradlew build -x test
  
# Run all tests, if any fails, interrupt the pipeline(fail it)
test:
  interruptible: true
  stage: test
  script:
    - apt update &&
        DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server mysql-client &&
        service mysql start

    # Wait for MySQL to start
    - sleep 5
    # Run MySQL commands to create user 'eventichs' identified by 'scrum_master'
    - mysql -e < SQL/Create_DB_tables.sql
    - mysql -e "CREATE USER 'eventichs' IDENTIFIED BY 'scrum_master';"
    - mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'eventichs';"
    - mysql -e "FLUSH PRIVILEGES;"
    
    - ./gradlew build
  

deploy_to_server:
  needs: [test]
  stage: deploy
  script:
    - apk update && apk add openssh-client
    - echo "$SERVER_SSH_PRIVATE_KEY" > deploy_key  # Save the SSH key to a file
    - chmod 600 deploy_key  # Set correct permissions
    - eval "$(ssh-agent -s)"  # Start the SSH agent
    - ssh-add deploy_key  # Add the SSH key to the agent
    - ssh -o StrictHostKeyChecking=no -i deploy_key serv@v34l.com 'cd ~/Dev/eventichs_api; git checkout server-deploy; git pull; ./gradlew build -x test; fuser -k 8080/tcp; nohup ./gradlew bootRun &'
  only:
    - server-deploy
