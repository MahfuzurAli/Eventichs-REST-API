image: gradle:alpine

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

stages:
  - build
  - test
  - deploy

variables:
  SERVER_SSH_PRIVATE_KEY: "$SERVER_SSH_PRIVATE_KEY"

# Make Project
build:
  interruptible: true
  stage: build
  script:
    - ./gradlew build -x test
  only:
    - api
# Run all tests, if any fails, interrupt the pipeline(fail it)
test:
  needs: [build]
  interruptible: true
  stage: test
  script:
    - ./gradlew test
  only:
    - api
deploy_to_server:
  stage: deploy
  script:
    - apk update && apk add openssh-client
    - echo "$SERVER_SSH_PRIVATE_KEY" > deploy_key  # Save the SSH key to a file
    - chmod 600 deploy_key  # Set correct permissions
    - eval "$(ssh-agent -s)"  # Start the SSH agent
    - ssh-add deploy_key  # Add the SSH key to the agent
    - ssh -o StrictHostKeyChecking=no -i deploy_key serv@v34l.com 'cd ~/Dev/eventichs_api; git checkout server-deploy; git pull; ./gradlew build -x test; fuser -k 8080/tcp; nohup ./gradlew bootRun &'
  only:
    - server-deploy
